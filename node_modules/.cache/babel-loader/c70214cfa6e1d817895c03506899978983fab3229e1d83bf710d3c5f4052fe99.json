{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajays\\\\Desktop\\\\ChatwithAjay\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport GeminiService from '../utils/geminiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  onNewQuestion,\n  setIsLoading,\n  isGenerating,\n  onPauseOrTerminate\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [attachedFile, setAttachedFile] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Enhanced File Validation\n  const validateFile = file => {\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'image/webp', 'image/svg+xml'];\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    const minSize = 1 * 1024; // 1KB\n\n    if (!allowedTypes.includes(file.type)) {\n      throw new Error('Unsupported file type');\n    }\n    if (file.size > maxSize) {\n      throw new Error('File too large (max 10MB)');\n    }\n    if (file.size < minSize) {\n      throw new Error('File too small');\n    }\n    return true;\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        validateFile(file);\n        setAttachedFile(file);\n      } catch (error) {\n        alert(error.message);\n        e.target.value = null;\n      }\n    }\n  };\n  const handleFileRemove = () => {\n    setAttachedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = null;\n    }\n  };\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Trim and validate input\n    const trimmedQuestion = question.trim();\n    if (!trimmedQuestion && !attachedFile) return;\n\n    // Input length validation\n    if (trimmedQuestion.length > 1000) {\n      alert('Question is too long. Maximum 1000 characters.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      let result;\n      if (attachedFile) {\n        const fileContent = await readFileAsBase64(attachedFile);\n        result = await GeminiService.generateAnswerWithFile(trimmedQuestion, fileContent);\n      } else {\n        result = await GeminiService.generateAnswer(trimmedQuestion);\n      }\n      if (result.success) {\n        onNewQuestion(trimmedQuestion, result.answer);\n      } else {\n        const errorMessage = result.error || \"An unexpected error occurred while processing your request.\";\n        console.error(\"Gemini API Error:\", errorMessage);\n        onNewQuestion(trimmedQuestion, errorMessage);\n      }\n    } catch (error) {\n      console.error(\"Unexpected Error:\", error);\n      const userFriendlyMessage = error.message.includes('API key') ? \"Invalid or missing API key. Please check your configuration.\" : error.message.includes('network') ? \"Network error. Please check your internet connection.\" : \"An unexpected error occurred. Please try again later.\";\n      onNewQuestion(trimmedQuestion, userFriendlyMessage);\n    } finally {\n      setIsLoading(false);\n      setQuestion('');\n      handleFileRemove();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-4 flex flex-col space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        className: \"hidden\",\n        accept: \"image/jpeg,image/png,image/gif,application/pdf,image/webp,image/svg+xml\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fileInputRef.current.click(),\n        className: \"p-2 bg-gray-200 dark:bg-gray-700 rounded \\r hover:bg-gray-300 dark:hover:bg-gray-600 \\r transition-colors duration-300\",\n        \"aria-label\": \"Attach File\",\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), attachedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center bg-blue-50 dark:bg-blue-900/30 px-2 py-1 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm mr-2 text-gray-600 dark:text-gray-300\",\n          children: attachedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFileRemove,\n          className: \"text-red-500 hover:text-red-700\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Ask a question... (max 1000 chars)\",\n        maxLength: 1000,\n        className: \"flex-grow px-4 py-2 border dark:border-gray-600 \\r focus:outline-none focus:ring-2 focus:ring-blue-500 \\r dark:bg-gray-700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onPauseOrTerminate,\n        className: \"ml-2 p-2 bg-red-500 hover:bg-red-600 text-white \\r rounded transition-colors duration-300\",\n        children: \"\\u23F9\\uFE0F Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 hover:bg-blue-600 text-white \\r px-4 py-2 rounded transition-colors\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), question.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-500 self-end\",\n      children: [question.length, \"/1000 characters\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"idleFrWigZBVcR6jMeKdkqQ1sxg=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useRef","GeminiService","jsxDEV","_jsxDEV","ChatInput","onNewQuestion","setIsLoading","isGenerating","onPauseOrTerminate","_s","question","setQuestion","attachedFile","setAttachedFile","fileInputRef","validateFile","file","allowedTypes","maxSize","minSize","includes","type","Error","size","handleFileChange","e","target","files","error","alert","message","value","handleFileRemove","current","readFileAsBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleSubmit","preventDefault","trimmedQuestion","trim","length","fileContent","generateAnswerWithFile","generateAnswer","success","answer","errorMessage","console","userFriendlyMessage","onSubmit","className","children","ref","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","click","name","placeholder","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/ajays/Desktop/ChatwithAjay/src/components/ChatInput.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport GeminiService from '../utils/geminiService';\r\n\r\nconst ChatInput = ({ \r\n  onNewQuestion, \r\n  setIsLoading, \r\n  isGenerating, \r\n  onPauseOrTerminate \r\n}) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [attachedFile, setAttachedFile] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Enhanced File Validation\r\n  const validateFile = (file) => {\r\n    const allowedTypes = [\r\n      'image/jpeg', \r\n      'image/png', \r\n      'image/gif', \r\n      'application/pdf',\r\n      'image/webp',\r\n      'image/svg+xml'\r\n    ];\r\n    const maxSize = 10 * 1024 * 1024; // 10MB\r\n    const minSize = 1 * 1024; // 1KB\r\n\r\n    if (!allowedTypes.includes(file.type)) {\r\n      throw new Error('Unsupported file type');\r\n    }\r\n\r\n    if (file.size > maxSize) {\r\n      throw new Error('File too large (max 10MB)');\r\n    }\r\n\r\n    if (file.size < minSize) {\r\n      throw new Error('File too small');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      try {\r\n        validateFile(file);\r\n        setAttachedFile(file);\r\n      } catch (error) {\r\n        alert(error.message);\r\n        e.target.value = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileRemove = () => {\r\n    setAttachedFile(null);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  const readFileAsBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Trim and validate input\r\n    const trimmedQuestion = question.trim();\r\n    if (!trimmedQuestion && !attachedFile) return;\r\n\r\n    // Input length validation\r\n    if (trimmedQuestion.length > 1000) {\r\n      alert('Question is too long. Maximum 1000 characters.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      let result;\r\n      if (attachedFile) {\r\n        const fileContent = await readFileAsBase64(attachedFile);\r\n        result = await GeminiService.generateAnswerWithFile(\r\n          trimmedQuestion, \r\n          fileContent\r\n        );\r\n      } else {\r\n        result = await GeminiService.generateAnswer(trimmedQuestion);\r\n      }\r\n      \r\n      if (result.success) {\r\n        onNewQuestion(trimmedQuestion, result.answer);\r\n      } else {\r\n        const errorMessage = result.error || \r\n          \"An unexpected error occurred while processing your request.\";\r\n        \r\n        console.error(\"Gemini API Error:\", errorMessage);\r\n        onNewQuestion(trimmedQuestion, errorMessage);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Unexpected Error:\", error);\r\n      \r\n      const userFriendlyMessage = \r\n        error.message.includes('API key') \r\n          ? \"Invalid or missing API key. Please check your configuration.\" \r\n          : error.message.includes('network')\r\n          ? \"Network error. Please check your internet connection.\"\r\n          : \"An unexpected error occurred. Please try again later.\";\r\n      \r\n      onNewQuestion(trimmedQuestion, userFriendlyMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setQuestion('');\r\n      handleFileRemove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-4 flex flex-col space-y-2\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        {/* File Attachment Button */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={handleFileChange}\r\n          className=\"hidden\"\r\n          accept=\"image/jpeg,image/png,image/gif,application/pdf,image/webp,image/svg+xml\"\r\n        />\r\n        \r\n        <button\r\n          type=\"button\"\r\n          onClick={() => fileInputRef.current.click()}\r\n          className=\"p-2 bg-gray-200 dark:bg-gray-700 rounded \r\n                     hover:bg-gray-300 dark:hover:bg-gray-600 \r\n                     transition-colors duration-300\"\r\n          aria-label=\"Attach File\"\r\n        >\r\n          📎\r\n        </button>\r\n\r\n        {/* Attached File Display */}\r\n        {attachedFile && (\r\n          <div className=\"flex items-center bg-blue-50 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n            <span className=\"text-sm mr-2 text-gray-600 dark:text-gray-300\">\r\n              {attachedFile.name}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleFileRemove}\r\n              className=\"text-red-500 hover:text-red-700\"\r\n            >\r\n              ✕\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Text Input */}\r\n        <input\r\n          type=\"text\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          placeholder=\"Ask a question... (max 1000 chars)\"\r\n          maxLength={1000}\r\n          className=\"flex-grow px-4 py-2 border dark:border-gray-600 \r\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 \r\n                     dark:bg-gray-700\"\r\n        />\r\n\r\n        {/* Pause/Terminate Button */}\r\n        {isGenerating && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={onPauseOrTerminate}\r\n            className=\"ml-2 p-2 bg-red-500 hover:bg-red-600 text-white \r\n                       rounded transition-colors duration-300\"\r\n          >\r\n            ⏹️ Stop\r\n          </button>\r\n        )}\r\n\r\n        {/* Send Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white \r\n                     px-4 py-2 rounded transition-colors\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n\r\n      {/* Character Count */}\r\n      {question.length > 0 && (\r\n        <div className=\"text-xs text-gray-500 self-end\">\r\n          {question.length}/1000 characters\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}