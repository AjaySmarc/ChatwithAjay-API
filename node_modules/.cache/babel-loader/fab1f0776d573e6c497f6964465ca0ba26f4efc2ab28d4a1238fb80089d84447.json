{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajays\\\\Desktop\\\\ChatwithAjay\\\\src\\\\components\\\\VoiceInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { toast } from 'sonner';\nimport GeminiService from '../utils/geminiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onNewQuestion,\n  setIsLoading,\n  onPauseOrTerminate,\n  supportedLanguages = ['en-US', 'es-ES', 'fr-FR', 'de-DE']\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [error, setError] = useState(null);\n  const recognitionRef = useRef(null);\n  const synthesisRef = useRef(null);\n\n  // Browser Compatibility Check\n  const isSpeechSupported = useCallback(() => {\n    return 'SpeechRecognition' in window || 'webkitSpeechRecognition' in window;\n  }, []);\n\n  // Initialize Speech Recognition\n  useEffect(() => {\n    if (!isSpeechSupported()) {\n      toast.error('Speech recognition not supported in this browser');\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognitionRef.current = new SpeechRecognition();\n    recognitionRef.current.continuous = false;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = language;\n    recognitionRef.current.onstart = () => {\n      setError(null);\n      setTranscript('');\n      setIsListening(true);\n      toast.info('Listening...');\n    };\n    recognitionRef.current.onresult = event => {\n      const speechResult = event.results[0][0].transcript;\n      setTranscript(speechResult);\n      handleVoiceSubmit(speechResult);\n    };\n    recognitionRef.current.onerror = event => {\n      handleSpeechError(event.error);\n    };\n    recognitionRef.current.onend = () => {\n      setIsListening(false);\n    };\n    return () => {\n      stopAllOperations();\n    };\n  }, [language, isSpeechSupported]);\n\n  // Error Handling\n  const handleSpeechError = useCallback(errorType => {\n    const errorMessages = {\n      'no-speech': 'No speech detected. Please speak clearly.',\n      'audio-capture': 'Audio capture failed. Check microphone permissions.',\n      'not-allowed': 'Microphone access denied. Please allow microphone.',\n      'network': 'Network error during speech recognition.',\n      'default': 'An unexpected speech recognition error occurred.'\n    };\n    const message = errorMessages[errorType] || errorMessages['default'];\n    setError(message);\n    toast.error(message);\n    setIsListening(false);\n  }, []);\n\n  // Stop All Speech Operations\n  const stopAllOperations = useCallback(() => {\n    var _recognitionRef$curre;\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    window.speechSynthesis.cancel();\n    setIsListening(false);\n    setIsSpeaking(false);\n    setTranscript('');\n    setError(null);\n  }, []);\n\n  // Voice Submission Handler\n  const handleVoiceSubmit = async question => {\n    if (!question) return;\n    setIsLoading(true);\n    try {\n      const result = await GeminiService.generateAnswer(question);\n      if (result.success) {\n        onNewQuestion(question, result.answer);\n        await speakAnswer(result.answer);\n      } else {\n        toast.error(result.error || \"Processing error\");\n        onNewQuestion(question, result.error || \"Processing error\");\n      }\n    } catch (error) {\n      toast.error(\"Network or service error\");\n      onNewQuestion(question, \"Network or service error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Text-to-Speech \n  const speakAnswer = async text => {\n    if (!text) return;\n    window.speechSynthesis.cancel();\n    return new Promise((resolve, reject) => {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = language;\n      utterance.rate = 0.9;\n      utterance.pitch = 1.0;\n      synthesisRef.current = utterance;\n      setIsSpeaking(true);\n      toast.info('Speaking response...');\n      utterance.onend = () => {\n        setIsSpeaking(false);\n        resolve();\n      };\n      utterance.onerror = error => {\n        setIsSpeaking(false);\n        toast.error('Speech synthesis failed');\n        reject(error);\n      };\n      window.speechSynthesis.speak(utterance);\n    });\n  };\n\n  // Start Listening\n  const startListening = () => {\n    var _recognitionRef$curre2;\n    (_recognitionRef$curre2 = recognitionRef.current) === null || _recognitionRef$curre2 === void 0 ? void 0 : _recognitionRef$curre2.start();\n  };\n\n  // Language Change\n  const changeLanguage = useCallback(newLanguage => {\n    if (supportedLanguages.includes(newLanguage)) {\n      setLanguage(newLanguage);\n      if (recognitionRef.current) {\n        recognitionRef.current.lang = newLanguage;\n      }\n      toast.success(`Language changed to ${newLanguage}`);\n    } else {\n      toast.error('Unsupported language');\n    }\n  }, [supportedLanguages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: language,\n      onChange: e => changeLanguage(e.target.value),\n      className: \"p-2 border rounded-md\",\n      children: supportedLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: lang,\n        children: lang\n      }, lang, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isListening || isSpeaking ? stopAllOperations : startListening,\n      className: `p-2 rounded-md transition-colors \n          ${isListening || isSpeaking ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'}`,\n      children: isListening ? '🛑 Stop' : isSpeaking ? '🔊 Speaking' : '🎤 Voice'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), (isListening || isSpeaking) && onPauseOrTerminate && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onPauseOrTerminate,\n      className: \"p-2 bg-red-500 hover:bg-red-600 text-white rounded\",\n      children: \"\\u23F9\\uFE0F Terminate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), (isListening || isSpeaking || error) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `\n          p-2 rounded-md text-sm flex-grow\n          ${isListening ? 'bg-blue-50 text-blue-600' : isSpeaking ? 'bg-green-50 text-green-600' : 'bg-red-50 text-red-500'}\n        `,\n      children: [isListening && `Listening: ${transcript || ''}`, isSpeaking && 'Speaking response...', error && `Error: ${error}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"os+NuQGWEFRxaAdDrosBrD5actM=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","toast","GeminiService","jsxDEV","_jsxDEV","VoiceInput","onNewQuestion","setIsLoading","onPauseOrTerminate","supportedLanguages","_s","isListening","setIsListening","isSpeaking","setIsSpeaking","transcript","setTranscript","language","setLanguage","error","setError","recognitionRef","synthesisRef","isSpeechSupported","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onstart","info","onresult","event","speechResult","results","handleVoiceSubmit","onerror","handleSpeechError","onend","stopAllOperations","errorType","errorMessages","message","_recognitionRef$curre","stop","speechSynthesis","cancel","question","result","generateAnswer","success","answer","speakAnswer","text","Promise","resolve","reject","utterance","SpeechSynthesisUtterance","rate","pitch","speak","startListening","_recognitionRef$curre2","start","changeLanguage","newLanguage","includes","className","children","value","onChange","e","target","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ajays/Desktop/ChatwithAjay/src/components/VoiceInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { toast } from 'sonner';\r\nimport GeminiService from '../utils/geminiService';\r\n\r\nconst VoiceInput = ({ \r\n  onNewQuestion, \r\n  setIsLoading, \r\n  onPauseOrTerminate,\r\n  supportedLanguages = ['en-US', 'es-ES', 'fr-FR', 'de-DE']\r\n}) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [language, setLanguage] = useState('en-US');\r\n  const [error, setError] = useState(null);\r\n\r\n  const recognitionRef = useRef(null);\r\n  const synthesisRef = useRef(null);\r\n\r\n  // Browser Compatibility Check\r\n  const isSpeechSupported = useCallback(() => {\r\n    return 'SpeechRecognition' in window || 'webkitSpeechRecognition' in window;\r\n  }, []);\r\n\r\n  // Initialize Speech Recognition\r\n  useEffect(() => {\r\n    if (!isSpeechSupported()) {\r\n      toast.error('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    recognitionRef.current = new SpeechRecognition();\r\n    \r\n    recognitionRef.current.continuous = false;\r\n    recognitionRef.current.interimResults = false;\r\n    recognitionRef.current.lang = language;\r\n\r\n    recognitionRef.current.onstart = () => {\r\n      setError(null);\r\n      setTranscript('');\r\n      setIsListening(true);\r\n      toast.info('Listening...');\r\n    };\r\n\r\n    recognitionRef.current.onresult = (event) => {\r\n      const speechResult = event.results[0][0].transcript;\r\n      setTranscript(speechResult);\r\n      handleVoiceSubmit(speechResult);\r\n    };\r\n\r\n    recognitionRef.current.onerror = (event) => {\r\n      handleSpeechError(event.error);\r\n    };\r\n\r\n    recognitionRef.current.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    return () => {\r\n      stopAllOperations();\r\n    };\r\n  }, [language, isSpeechSupported]);\r\n\r\n  // Error Handling\r\n  const handleSpeechError = useCallback((errorType) => {\r\n    const errorMessages = {\r\n      'no-speech': 'No speech detected. Please speak clearly.',\r\n      'audio-capture': 'Audio capture failed. Check microphone permissions.',\r\n      'not-allowed': 'Microphone access denied. Please allow microphone.',\r\n      'network': 'Network error during speech recognition.',\r\n      'default': 'An unexpected speech recognition error occurred.'\r\n    };\r\n\r\n    const message = errorMessages[errorType] || errorMessages['default'];\r\n    setError(message);\r\n    toast.error(message);\r\n    setIsListening(false);\r\n  }, []);\r\n\r\n  // Stop All Speech Operations\r\n  const stopAllOperations = useCallback(() => {\r\n    recognitionRef.current?.stop();\r\n    window.speechSynthesis.cancel();\r\n    setIsListening(false);\r\n    setIsSpeaking(false);\r\n    setTranscript('');\r\n    setError(null);\r\n  }, []);\r\n\r\n  // Voice Submission Handler\r\n  const handleVoiceSubmit = async (question) => {\r\n    if (!question) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await GeminiService.generateAnswer(question);\r\n      \r\n      if (result.success) {\r\n        onNewQuestion(question, result.answer);\r\n        await speakAnswer(result.answer);\r\n      } else {\r\n        toast.error(result.error || \"Processing error\");\r\n        onNewQuestion(question, result.error || \"Processing error\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Network or service error\");\r\n      onNewQuestion(question, \"Network or service error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Text-to-Speech \r\n  const speakAnswer = async (text) => {\r\n    if (!text) return;\r\n\r\n    window.speechSynthesis.cancel();\r\n    return new Promise((resolve, reject) => {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = language;\r\n      utterance.rate = 0.9;\r\n      utterance.pitch = 1.0;\r\n\r\n      synthesisRef.current = utterance;\r\n\r\n      setIsSpeaking(true);\r\n      toast.info('Speaking response...');\r\n\r\n      utterance.onend = () => {\r\n        setIsSpeaking(false);\r\n        resolve();\r\n      };\r\n\r\n      utterance.onerror = (error) => {\r\n        setIsSpeaking(false);\r\n        toast.error('Speech synthesis failed');\r\n        reject(error);\r\n      };\r\n\r\n      window.speechSynthesis.speak(utterance);\r\n    });\r\n  };\r\n\r\n  // Start Listening\r\n  const startListening = () => {\r\n    recognitionRef.current?.start();\r\n  };\r\n\r\n  // Language Change\r\n  const changeLanguage = useCallback((newLanguage) => {\r\n    if (supportedLanguages.includes(newLanguage)) {\r\n      setLanguage(newLanguage);\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.lang = newLanguage;\r\n      }\r\n      toast.success(`Language changed to ${newLanguage}`);\r\n    } else {\r\n      toast.error('Unsupported language');\r\n    }\r\n  }, [supportedLanguages]);\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      {/* Language Selector */}\r\n      <select \r\n        value={language}\r\n        onChange={(e) => changeLanguage(e.target.value)}\r\n        className=\"p-2 border rounded-md\"\r\n      >\r\n        {supportedLanguages.map(lang => (\r\n          <option key={lang} value={lang}>{lang}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Voice Button */}\r\n      <button\r\n        onClick={isListening || isSpeaking ? stopAllOperations : startListening}\r\n        className={`p-2 rounded-md transition-colors \r\n          ${(isListening || isSpeaking)\r\n            ? 'bg-red-500 hover:bg-red-600 text-white' \r\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\r\n          }`}\r\n      >\r\n        {isListening ? '🛑 Stop' : isSpeaking ? '🔊 Speaking' : '🎤 Voice'}\r\n      </button>\r\n\r\n      {/* Pause/Terminate Button */}\r\n      {(isListening || isSpeaking) && onPauseOrTerminate && (\r\n        <button\r\n          onClick={onPauseOrTerminate}\r\n          className=\"p-2 bg-red-500 hover:bg-red-600 text-white rounded\"\r\n        >\r\n          ⏹️ Terminate\r\n        </button>\r\n      )}\r\n\r\n      {/* Status Display */}\r\n      {(isListening || isSpeaking || error) && (\r\n        <div className={`\r\n          p-2 rounded-md text-sm flex-grow\r\n          ${isListening ? 'bg-blue-50 text-blue-600' : \r\n            isSpeaking ? 'bg-green-50 text-green-600' : \r\n            'bg-red-50 text-red-500'}\r\n        `}>\r\n          {isListening && `Listening: ${transcript || ''}`}\r\n          {isSpeaking && 'Speaking response...'}\r\n          {error && `Error: ${error}`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}