{"ast":null,"code":"// src/utils/geminiService.js\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nclass GeminiService {\n  constructor() {\n    // IMPORTANT: Replace with your actual Gemini API key\n    const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n    this.genAI = new GoogleGenerativeAI(API_KEY);\n  }\n  async generateAnswer(question) {\n    try {\n      const model = this.genAI.getGenerativeModel({\n        model: \"gemini-pro\"\n      });\n      const result = await model.generateContent(question);\n      const response = await result.response;\n      const text = response.text();\n      return {\n        success: true,\n        answer: text\n      };\n    } catch (error) {\n      console.error(\"Gemini API Error:\", error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\nexport default new GeminiService();","map":{"version":3,"names":["GoogleGenerativeAI","GeminiService","constructor","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","genAI","generateAnswer","question","model","getGenerativeModel","result","generateContent","response","text","success","answer","error","console","message"],"sources":["C:/Users/ajays/Desktop/ChatwithAjay/src/utils/geminiService.js"],"sourcesContent":["// src/utils/geminiService.js\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\nclass GeminiService {\r\n  constructor() {\r\n    // IMPORTANT: Replace with your actual Gemini API key\r\n    const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\r\n    this.genAI = new GoogleGenerativeAI(API_KEY);\r\n  }\r\n\r\n  async generateAnswer(question) {\r\n    try {\r\n      const model = this.genAI.getGenerativeModel({ model: \"gemini-pro\" });\r\n      \r\n      const result = await model.generateContent(question);\r\n      const response = await result.response;\r\n      const text = response.text();\r\n      \r\n      return {\r\n        success: true,\r\n        answer: text\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Gemini API Error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new GeminiService();"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ;IACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;IACpD,IAAI,CAACC,KAAK,GAAG,IAAIP,kBAAkB,CAACG,OAAO,CAAC;EAC9C;EAEA,MAAMK,cAAcA,CAACC,QAAQ,EAAE;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAG,IAAI,CAACH,KAAK,CAACI,kBAAkB,CAAC;QAAED,KAAK,EAAE;MAAa,CAAC,CAAC;MAEpE,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAACJ,QAAQ,CAAC;MACpD,MAAMK,QAAQ,GAAG,MAAMF,MAAM,CAACE,QAAQ;MACtC,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAAC,CAAC;MAE5B,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAEF;MACV,CAAC;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEA,KAAK,CAACE;MACf,CAAC;IACH;EACF;AACF;AAEA,eAAe,IAAInB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}